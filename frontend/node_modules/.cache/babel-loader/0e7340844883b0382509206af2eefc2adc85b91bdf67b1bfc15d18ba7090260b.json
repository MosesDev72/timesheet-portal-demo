{"ast":null,"code":"// dateUtils.js\n// Parse input date (YYYY-MM-DD or MM/DD/YYYY) as local date\nexport function parseLocalDate(dateStr) {\n  if (!dateStr) return null;\n\n  // Handle YYYY-MM-DD (from <input type=\"date\">)\n  if (dateStr.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n    const [year, month, day] = dateStr.split(\"-\").map(Number);\n    return new Date(year, month - 1, day); // Months are 0-indexed\n  }\n\n  // Handle MM/DD/YYYY (custom input)\n  if (dateStr.match(/^\\d{2}\\/\\d{2}\\/\\d{4}$/)) {\n    const [month, day, year] = dateStr.split(\"/\").map(Number);\n    return new Date(year, month - 1, day);\n  }\n  throw new Error(`Invalid date format: ${dateStr}`);\n}\n\n// Format date for display or export (MM/DD/YYYY)\nexport function formatLocalDate(date) {\n  if (!(date instanceof Date) || isNaN(date)) return \"\";\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${month}/${day}/${year}`;\n}","map":{"version":3,"names":["parseLocalDate","dateStr","match","year","month","day","split","map","Number","Date","Error","formatLocalDate","date","isNaN","getFullYear","String","getMonth","padStart","getDate"],"sources":["/Users/Thuy/timesheet_dummy/timesheet-portal-demo/frontend/src/utils/dateUtils.js"],"sourcesContent":["// dateUtils.js\n// Parse input date (YYYY-MM-DD or MM/DD/YYYY) as local date\nexport function parseLocalDate(dateStr) {\n  if (!dateStr) return null;\n\n  // Handle YYYY-MM-DD (from <input type=\"date\">)\n  if (dateStr.match(/^\\d{4}-\\d{2}-\\d{2}$/)) {\n    const [year, month, day] = dateStr.split(\"-\").map(Number);\n    return new Date(year, month - 1, day); // Months are 0-indexed\n  }\n\n  // Handle MM/DD/YYYY (custom input)\n  if (dateStr.match(/^\\d{2}\\/\\d{2}\\/\\d{4}$/)) {\n    const [month, day, year] = dateStr.split(\"/\").map(Number);\n    return new Date(year, month - 1, day);\n  }\n\n  throw new Error(`Invalid date format: ${dateStr}`);\n}\n\n// Format date for display or export (MM/DD/YYYY)\nexport function formatLocalDate(date) {\n  if (!(date instanceof Date) || isNaN(date)) return \"\";\n  const year = date.getFullYear();\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\n  const day = String(date.getDate()).padStart(2, \"0\");\n  return `${month}/${day}/${year}`;\n}\n"],"mappings":"AAAA;AACA;AACA,OAAO,SAASA,cAAcA,CAACC,OAAO,EAAE;EACtC,IAAI,CAACA,OAAO,EAAE,OAAO,IAAI;;EAEzB;EACA,IAAIA,OAAO,CAACC,KAAK,CAAC,qBAAqB,CAAC,EAAE;IACxC,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,GAAG,CAAC,GAAGJ,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACzD,OAAO,IAAIC,IAAI,CAACN,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC,CAAC,CAAC;EACzC;;EAEA;EACA,IAAIJ,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC,EAAE;IAC1C,MAAM,CAACE,KAAK,EAAEC,GAAG,EAAEF,IAAI,CAAC,GAAGF,OAAO,CAACK,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IACzD,OAAO,IAAIC,IAAI,CAACN,IAAI,EAAEC,KAAK,GAAG,CAAC,EAAEC,GAAG,CAAC;EACvC;EAEA,MAAM,IAAIK,KAAK,CAAC,wBAAwBT,OAAO,EAAE,CAAC;AACpD;;AAEA;AACA,OAAO,SAASU,eAAeA,CAACC,IAAI,EAAE;EACpC,IAAI,EAAEA,IAAI,YAAYH,IAAI,CAAC,IAAII,KAAK,CAACD,IAAI,CAAC,EAAE,OAAO,EAAE;EACrD,MAAMT,IAAI,GAAGS,IAAI,CAACE,WAAW,CAAC,CAAC;EAC/B,MAAMV,KAAK,GAAGW,MAAM,CAACH,IAAI,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EAC1D,MAAMZ,GAAG,GAAGU,MAAM,CAACH,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;EACnD,OAAO,GAAGb,KAAK,IAAIC,GAAG,IAAIF,IAAI,EAAE;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}